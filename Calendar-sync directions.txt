Section I
You will need to first create an "If This Then That" Account.

•	After creating an account, click on your name in the upper right hand corner and choose New Applet.
•	Click on the "This" hyperlink and in the search services box type in Todoist
•	Click on Todoist, then pick “New task created”
•	Pick your selected project (I choose Inbox) and click on create trigger
•	Now click on the "That" hyperlink and in the search services box type in google calendar
•	Click on Google Calendar and then choose "Create a detailed Calendar event"
•	Choose the correct calender and click create action
•	Click on Add ingredient under both start and end time and select Due Date
•	For All day select Yes
•	For Title you will want to ONLY use the TaskContent ingredient, delete “New Task Created in Todoist –“
•	then click on create action

Section II
Now we will begin setting up the raspberry pi. 
•	Download and install the Raspberry Pi Desktop at https://www.raspberrypi.org/downloads/
YOU WILL NEED TO UPDATE THE PI FIRST
Open the terminal and run the following commands to update and create our API directory get access to the todoist API
$ sudo apt-get update
$ sudo apt-get upgrade
$ cd ~
$ sudo mkdir API
$ cd API
$ sudo wget https://github.com/Doist/todoist-python/archive/master.zip
$ sudo unzip master.zip
$ sudo pip install -e .
(Yes the period is included, this makes the "pip install -e" run inside the current directory)
(Source: https://github.com/Doist/todoist-python)

Once that is done run the following command to get access to the google calendar API
$ sudo pip install --upgrade google-api-python-client oauth2client
(Source: https://developers.google.com/calendar/quickstart/python)

*If it throws errors during the above step run the two following commands and try again*
$ sudo pip install --upgrade requests
$ sudo pip install --upgrade setuptools

After the precceeding commands have been run, you will need setup authentication for Google Calendar.
•	Go to https://developers.google.com/calendar/quickstart/python click on Enable the Google Calendar API
•	Click the dropdown and select “+ Create new project”, give it a name and click next
•	Now select a Product name and click next
•	You will need to next click on “Download client configuration” to get the “credentials.json”
•	This file will need to go in the same directory that your script will go (/home/pi/API)

You will now put the calendar-sync.py file into the /home/pi/API directory.

After that you will need to change the line that has api.user.login('—Todoist username—', '—Todoist password--') to include your credentials. You’ll want to include the quotes around your login and password.

Run the following command to give your new script executable permissions
$ sudo chmod +x calendar-sync.py

If you want to run a quick test you can complete something on Todoist and run. I’ve included some “print” statements to help you see what is actually happening on the back end.
$ sudo python calendar-sync.py

I set my script to run every 3 minutes. (to constantly keep the calendar up to date) I chose to do this with a crontab entry. Open the terminal and run
$ sudo crontab -e
(I perferr to use nano, so I selected option 2)

Then paste the following at the bottom of the file and then hold “control” and press “x” on your keyboard to exit.
*/3 * * * * python '/home/pi/API/calendar-sync.py'
